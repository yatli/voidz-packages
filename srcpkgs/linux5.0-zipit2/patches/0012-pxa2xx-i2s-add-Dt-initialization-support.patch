--- a/sound/soc/pxa/Kconfig	  2019-03-10 20:08:30.498679065 +1300
+++ b/sound/soc/pxa/Kconfig       2019-03-10 20:40:52.531518335 +1300
@@ -29,7 +29,9 @@

 config SND_PXA2XX_SOC_I2S
        select SND_PXA2XX_LIB
-       tristate
+        tristate "PXA2XX I2S driver"
+        help
+          Say Y if you want ot enable PXA2XX I2S driver

 config SND_PXA_SOC_SSP
        tristate "Soc Audio via PXA2xx/PXA3xx SSP ports"

diff --git a/sound/soc/pxa/pxa2xx-i2s.c b/sound/soc/pxa/pxa2xx-i2s.c
index 0389cf7..96eb78d 100644
--- a/sound/soc/pxa/pxa2xx-i2s.c
+++ b/sound/soc/pxa/pxa2xx-i2s.c
@@ -24,6 +24,7 @@
 #include <sound/soc.h>
 #include <sound/pxa2xx-lib.h>
 #include <sound/dmaengine_pcm.h>
+#include <linux/of.h>
 
 #include <mach/hardware.h>
 #include <mach/audio.h>
@@ -302,7 +303,7 @@ static int pxa2xx_i2s_resume(struct snd_soc_dai *dai)
 
 static int pxa2xx_i2s_probe(struct snd_soc_dai *dai)
 {
-	clk_i2s = clk_get(dai->dev, "I2SCLK");
+	clk_i2s = clk_get(dai->dev, NULL);
 	if (IS_ERR(clk_i2s))
 		return PTR_ERR(clk_i2s);
 
@@ -374,11 +375,20 @@ static int pxa2xx_i2s_drv_probe(struct platform_device *pdev)
 					       &pxa_i2s_dai, 1);
 }
 
+#ifdef CONFIG_OF
+static const struct of_device_id snd_soc_pxa2xx_i2s_match[] = {
+	{ .compatible   = "mrvl,pxa2xx-i2s" },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, snd_soc_pxa2xx_i2s_match);
+#endif
+
 static struct platform_driver pxa2xx_i2s_driver = {
 	.probe = pxa2xx_i2s_drv_probe,
 
 	.driver = {
 		.name = "pxa2xx-i2s",
+		.of_match_table = of_match_ptr(snd_soc_pxa2xx_i2s_match),
 	},
 };
 
-- 
1.7.10.4

